describe('Automation Test Suite - Fixtures', function () {
  context('get /Export Land', () => {
    this.beforeEach(function () {
      cy.fixture('data').then(function (testdata) {
        this.testdata = testdata;
      })
    })
    it('should export land', function () {
      cy.request({
        method: this.testdata.get, url: this.testdata.ExportLand, headers: { "Cookie": this.testdata.tokenA }, failOnStatusCode: false
      }).then(
        (response) => {
          expect(response.body.data).to.contain.keys(this.testdata.ExportLandKeys)
        })
    })
    {
      it('should not export land', function () {
        cy.request({ method: this.testdata.get, url: this.testdata.ExportLand, headers: {}, failOnStatusCode: false }).then(
          (response) => {
            expect(response.status).eq(404)

            //OR

            expect(response.body).to.contain("Cannot GET /assets/export/lands")

            //OR

            const parser = new DOMParser();
            const dom = parser.parseFromString(response.body, 'text/html');
            expect(dom.querySelector('title')).to.contain('Error')

          })
      })
    }
  })
})







/*import { homeData } from "../fixtures/wrldData.cy";

describe('Upload files', () => {
  context('POST /Upload files', () => {
    it('should upload files', () => {
      const image = homeData.fileNameA;
        const methodPost = 'POST';
        const urlA = 'https://staging-services.wrld.xyz/assets/uploadFiles';
        const animation = homeData.fileNameB;
        const assetId = homeData.assetId;
        
      const formData = new FormData();
                formData.set('assetIds', assetId)
                formData.set('image', image); //adding a file to the form
                formData.set('animation', animation);
                cy.request({
                  method: methodPost, url: urlA, body: formData , headers: { "Cookie": "token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlhdCI6MTY1Mjc5MDI1NCwiZXhwIjoxNjg0MzI2MjU0fQ.2vIFGELbH54q12-b1SIMwm0Eh7BLmdJMpPEX3E2XYy0", "content-type": "image/png" }, failOnStatusCode: false
                }).then(
                  (response) => {

                // Perform the request
                //cy.request(method, url, formData, function (response) {
                    expect(response.status).to.eq(200);
                    
      
 })
})
})
})*/































/*describe('Upload files', () => {
  context('POST /Upload files', () => {
    it('should upload files', () => {
      cy.request({
        method: 'POST', url: 'https://staging-services.wrld.xyz/assets/uploadFiles', body: {"assetIds": [1,2], "image": "cypress\screenshots\p1.png" , "animation": "cypress\screenshots\p1.png"}, headers: { "Cookie": "token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlhdCI6MTY1Mjc5MDI1NCwiZXhwIjoxNjg0MzI2MjU0fQ.2vIFGELbH54q12-b1SIMwm0Eh7BLmdJMpPEX3E2XYy0" }, failOnStatusCode: false
      }).then(
        (response) => {
          expect(response.body).to.have.property("id")
          /*expect(response.body.data[0]).to.have.property("contractId").equals(1)
          expect(response.body.data[0]).to.have.property("ownerId").equals(null)
          //expect(response.body.data[0]).to.have.property("assetLocation")
          expect(response.body.data[0]).to.have.property("price").equals(null)
          expect(response.body.data[0]).to.have.property("lat").contains("0.004728227")
          expect(response.body.data[0]).to.have.property("lon").contains("0.028400440")
          expect(response.body.data[0]).to.have.property("assetName").contains("AutoGenerated-Land")
          expect(response.body.data[0]).to.have.property("seasonName").contains("season-1")
          expect(response.body.data[0]).to.have.property("assetType").contains("land")
          expect(response.body.data[0]).to.have.property("assetStatus").contains("available")
          expect(response.body.data[0]).to.have.property("imageName").contains("QmdeKwJ9HYC8gR1r1M6u7X96mZRcMxJfEYSXiwEpuwduEq")
          expect(response.body.data[0]).to.have.property("animationName").contains("QmbqQfNTXUTwa82KbzmJ9Sq3n1oiPY7YYjKBn4cZ3YCG9g")
          expect(response.body.data[0]).to.have.property("isActive").equals(true)
          expect(response.body.data[0]).to.have.property("createdBy").equals(null)
          expect(response.body.data[0]).to.have.property("updatedBy").equals(null)
          expect(response.body.data[0]).to.have.property("description").equals(null)
          expect(response.body.data[0]).to.have.property("stickerName").equals(null)
          expect(response.body.data[0]).to.have.property("attributes").equals(null)
          expect(response.body.data[0]).to.have.property("createdAt").contains("2022-07-27T12:11:53.167Z")
          //expect(response.body.data[0]).to.have.property("updatedAt").contains("2022-08-11T09:17:58.617Z")
        })
    })
  })
  {
    it('should not upload files', () => {
     cy.request({method: 'POST', url:'https://staging-services.wrld.xyz/assets/uploadFiles', headers: {}, failOnStatusCode: false}).then(
       (response) => {
        expect(response.body).contain('Unauthorized')
       })
       cy.request({method: 'POST', url:'https://staging-services.wrld.xyz/assets/uploadFiles', headers: {"Cookie": "token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlhdCI6MTY1Mjc5MDI1NCwiZXhwIjoxNjg0MzI2MjU0fQ.2vIFGELbH54q12-b1SIMwm0Eh7BLmdJMpPEX3E21234"}, failOnStatusCode: false}).then(
       (response) => {
        expect(response.body).contain('Unauthorized')
       })
       cy.request({method: 'POST', url:'https://staging-services.wrld.xyz/assets/uploadFiles', headers: {"Cookie":"" }, failOnStatusCode: false}).then(
       (response) => {
        expect(response.body).contain('Unauthorized')
       })
 })
 }
})*/